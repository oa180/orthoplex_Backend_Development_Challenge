53894d5d9f5925ccf140a1afd90463fe
import catchAsync from '../../utils/catchAsync.js';
import jwt from 'jsonwebtoken';
import { promisify } from 'util';
import AppError from '../../middlewares/error/appError.js';
export const createToken = payload => {
  try {
    if (!payload) throw new AppError('Payload is missing at create token function!', 500);
    const jwtToken = jwt.sign(payload, process.env.JWT_SECRET, {
      expiresIn: process.env.JWT_EXPIRES_IN
    });
    return jwtToken;
  } catch (error) {
    throw new AppError(error.message, 500);
  }
};
export const verifyToken = async token => {
  try {
    if (!token) throw new AppError('Token is missing at verify token function!', 500);
    const decodedPayload = await promisify(jwt.verify)(token, process.env.JWT_SECRET);
    return decodedPayload;
  } catch (error) {
    throw new AppError('Invalid Token, Please login!', 500);
  }
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjYXRjaEFzeW5jIiwiand0IiwicHJvbWlzaWZ5IiwiQXBwRXJyb3IiLCJjcmVhdGVUb2tlbiIsInBheWxvYWQiLCJqd3RUb2tlbiIsInNpZ24iLCJwcm9jZXNzIiwiZW52IiwiSldUX1NFQ1JFVCIsImV4cGlyZXNJbiIsIkpXVF9FWFBJUkVTX0lOIiwiZXJyb3IiLCJtZXNzYWdlIiwidmVyaWZ5VG9rZW4iLCJ0b2tlbiIsImRlY29kZWRQYXlsb2FkIiwidmVyaWZ5Il0sInNvdXJjZXMiOlsiand0LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBjYXRjaEFzeW5jIGZyb20gJy4uLy4uL3V0aWxzL2NhdGNoQXN5bmMuanMnO1xyXG5pbXBvcnQgand0IGZyb20gJ2pzb253ZWJ0b2tlbic7XHJcbmltcG9ydCB7IHByb21pc2lmeSB9IGZyb20gJ3V0aWwnO1xyXG5pbXBvcnQgQXBwRXJyb3IgZnJvbSAnLi4vLi4vbWlkZGxld2FyZXMvZXJyb3IvYXBwRXJyb3IuanMnO1xyXG5cclxuZXhwb3J0IGNvbnN0IGNyZWF0ZVRva2VuID0gcGF5bG9hZCA9PiB7XHJcbiAgdHJ5IHtcclxuICAgIGlmICghcGF5bG9hZClcclxuICAgICAgdGhyb3cgbmV3IEFwcEVycm9yKCdQYXlsb2FkIGlzIG1pc3NpbmcgYXQgY3JlYXRlIHRva2VuIGZ1bmN0aW9uIScsIDUwMCk7XHJcblxyXG4gICAgY29uc3Qgand0VG9rZW4gPSBqd3Quc2lnbihwYXlsb2FkLCBwcm9jZXNzLmVudi5KV1RfU0VDUkVULCB7XHJcbiAgICAgIGV4cGlyZXNJbjogcHJvY2Vzcy5lbnYuSldUX0VYUElSRVNfSU4sXHJcbiAgICB9KTtcclxuXHJcbiAgICByZXR1cm4gand0VG9rZW47XHJcbiAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgIHRocm93IG5ldyBBcHBFcnJvcihlcnJvci5tZXNzYWdlLCA1MDApO1xyXG4gIH1cclxufTtcclxuXHJcbmV4cG9ydCBjb25zdCB2ZXJpZnlUb2tlbiA9IGFzeW5jIHRva2VuID0+IHtcclxuICB0cnkge1xyXG4gICAgaWYgKCF0b2tlbilcclxuICAgICAgdGhyb3cgbmV3IEFwcEVycm9yKCdUb2tlbiBpcyBtaXNzaW5nIGF0IHZlcmlmeSB0b2tlbiBmdW5jdGlvbiEnLCA1MDApO1xyXG5cclxuICAgIGNvbnN0IGRlY29kZWRQYXlsb2FkID0gYXdhaXQgcHJvbWlzaWZ5KGp3dC52ZXJpZnkpKFxyXG4gICAgICB0b2tlbixcclxuICAgICAgcHJvY2Vzcy5lbnYuSldUX1NFQ1JFVFxyXG4gICAgKTtcclxuXHJcbiAgICByZXR1cm4gZGVjb2RlZFBheWxvYWQ7XHJcbiAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgIHRocm93IG5ldyBBcHBFcnJvcignSW52YWxpZCBUb2tlbiwgUGxlYXNlIGxvZ2luIScsIDUwMCk7XHJcbiAgfVxyXG59O1xyXG4iXSwibWFwcGluZ3MiOiJBQUFBLE9BQU9BLFVBQVUsTUFBTSwyQkFBMkI7QUFDbEQsT0FBT0MsR0FBRyxNQUFNLGNBQWM7QUFDOUIsU0FBU0MsU0FBUyxRQUFRLE1BQU07QUFDaEMsT0FBT0MsUUFBUSxNQUFNLHFDQUFxQztBQUUxRCxPQUFPLE1BQU1DLFdBQVcsR0FBR0MsT0FBTyxJQUFJO0VBQ3BDLElBQUk7SUFDRixJQUFJLENBQUNBLE9BQU8sRUFDVixNQUFNLElBQUlGLFFBQVEsQ0FBQyw4Q0FBOEMsRUFBRSxHQUFHLENBQUM7SUFFekUsTUFBTUcsUUFBUSxHQUFHTCxHQUFHLENBQUNNLElBQUksQ0FBQ0YsT0FBTyxFQUFFRyxPQUFPLENBQUNDLEdBQUcsQ0FBQ0MsVUFBVSxFQUFFO01BQ3pEQyxTQUFTLEVBQUVILE9BQU8sQ0FBQ0MsR0FBRyxDQUFDRztJQUN6QixDQUFDLENBQUM7SUFFRixPQUFPTixRQUFRO0VBQ2pCLENBQUMsQ0FBQyxPQUFPTyxLQUFLLEVBQUU7SUFDZCxNQUFNLElBQUlWLFFBQVEsQ0FBQ1UsS0FBSyxDQUFDQyxPQUFPLEVBQUUsR0FBRyxDQUFDO0VBQ3hDO0FBQ0YsQ0FBQztBQUVELE9BQU8sTUFBTUMsV0FBVyxHQUFHLE1BQU1DLEtBQUssSUFBSTtFQUN4QyxJQUFJO0lBQ0YsSUFBSSxDQUFDQSxLQUFLLEVBQ1IsTUFBTSxJQUFJYixRQUFRLENBQUMsNENBQTRDLEVBQUUsR0FBRyxDQUFDO0lBRXZFLE1BQU1jLGNBQWMsR0FBRyxNQUFNZixTQUFTLENBQUNELEdBQUcsQ0FBQ2lCLE1BQU0sQ0FBQyxDQUNoREYsS0FBSyxFQUNMUixPQUFPLENBQUNDLEdBQUcsQ0FBQ0MsVUFDZCxDQUFDO0lBRUQsT0FBT08sY0FBYztFQUN2QixDQUFDLENBQUMsT0FBT0osS0FBSyxFQUFFO0lBQ2QsTUFBTSxJQUFJVixRQUFRLENBQUMsOEJBQThCLEVBQUUsR0FBRyxDQUFDO0VBQ3pEO0FBQ0YsQ0FBQyJ9