{"version":3,"names":["createToken","require","process","env","JWT_SECRET","JWT_EXPIRES_IN","test","payload","id","handler","jwt","sign","jest","fn","token","expect","toHaveBeenCalledWith","expiresIn"],"sources":["jwt.test.js"],"sourcesContent":["// import { createToken } from '../modules/Authentication/jwt.js';\r\nconst { createToken } = require('../modules/Authentication/jwt.mjs');\r\n\r\nprocess.env.JWT_SECRET = 'jwt-secret';\r\nprocess.env.JWT_EXPIRES_IN = '1h';\r\n\r\ntest('should return jsonwebtoken if payload provided', () => {\r\n  const payload = { id: '1', handler: 'test123' };\r\n  jwt.sign = jest.fn(() => 'jwt-token');\r\n\r\n  const token = createToken(payload);\r\n\r\n  expect(jwt.sign).toHaveBeenCalledWith(payload, 'jwt-secret', {\r\n    expiresIn: '1h',\r\n  });\r\n});\r\n"],"mappings":"AAAA;AACA,MAAM;EAAEA;AAAY,CAAC,GAAGC,OAAO,CAAC,mCAAmC,CAAC;AAEpEC,OAAO,CAACC,GAAG,CAACC,UAAU,GAAG,YAAY;AACrCF,OAAO,CAACC,GAAG,CAACE,cAAc,GAAG,IAAI;AAEjCC,IAAI,CAAC,gDAAgD,EAAE,MAAM;EAC3D,MAAMC,OAAO,GAAG;IAAEC,EAAE,EAAE,GAAG;IAAEC,OAAO,EAAE;EAAU,CAAC;EAC/CC,GAAG,CAACC,IAAI,GAAGC,IAAI,CAACC,EAAE,CAAC,MAAM,WAAW,CAAC;EAErC,MAAMC,KAAK,GAAGd,WAAW,CAACO,OAAO,CAAC;EAElCQ,MAAM,CAACL,GAAG,CAACC,IAAI,CAAC,CAACK,oBAAoB,CAACT,OAAO,EAAE,YAAY,EAAE;IAC3DU,SAAS,EAAE;EACb,CAAC,CAAC;AACJ,CAAC,CAAC"}